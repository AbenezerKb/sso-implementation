{
    "swagger": "2.0",
    "info": {
        "description": "This is the RidePLUS sso api.",
        "title": "RidePLUS SSO API",
        "contact": {
            "name": "2F Capital Support Email",
            "url": "http://www.2fcapital.com",
            "email": "info@1f-capital.com"
        },
        "version": "0.1"
    },
    "host": "206.189.54.235:8000",
    "basePath": "/v1",
    "paths": {
        "/login": {
            "post": {
                "description": "Login a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login a user.",
                "parameters": [
                    {
                        "description": "login_credential",
                        "name": "login_credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginCredential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "invalid input",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/otp": {
            "get": {
                "description": "is used to request otp for login and signup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request otp.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "phone",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "login",
                            "signup"
                        ],
                        "type": "string",
                        "description": "type can be login or signup",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "invalid input",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user.",
                "parameters": [
                    {
                        "description": "user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "create a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "create a new user.",
                "parameters": [
                    {
                        "description": "user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateUser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt is the time when the user is created.\nIt is automatically set when the user is created.",
                    "type": "string"
                },
                "email": {
                    "description": "Email is the email of the user.",
                    "type": "string"
                },
                "first_name": {
                    "description": "FirstName is the first name of the user.",
                    "type": "string"
                },
                "gender": {
                    "description": "Gender is the gender of the user.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier of the user.\nIt is automatically generated when the user is created.",
                    "type": "string"
                },
                "last_name": {
                    "description": "LastName is the last name of the user.",
                    "type": "string"
                },
                "middle_name": {
                    "description": "MiddleName is the middle name of the user.",
                    "type": "string"
                },
                "password": {
                    "description": "Password is the password of the user.\nIt is only used for logging in with email",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone is the phone of the user.",
                    "type": "string"
                },
                "profile_picture": {
                    "description": "ProfilePicture is the profile picture of the user.\nIt is set on a separate setProfilePicture endpoint.",
                    "type": "string"
                },
                "role": {
                    "description": "Role is the role given to the user being created.",
                    "type": "string"
                },
                "status": {
                    "description": "Status is the status of the user.\nIt is set to active by default after successful registration.",
                    "type": "string"
                },
                "user_name": {
                    "description": "UserName is the username of the user.\nIt is currently of no use",
                    "type": "string"
                }
            }
        },
        "dto.LoginCredential": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email of the user if for login with password",
                    "type": "string"
                },
                "otp": {
                    "description": "OTP generated from phone number",
                    "type": "string"
                },
                "password": {
                    "description": "Password of the user if for login with password",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone number of the user if for login with otp",
                    "type": "string"
                }
            }
        },
        "dto.RegisterUser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt is the time when the user is created.\nIt is automatically set when the user is created.",
                    "type": "string"
                },
                "email": {
                    "description": "Email is the email of the user.",
                    "type": "string"
                },
                "first_name": {
                    "description": "FirstName is the first name of the user.",
                    "type": "string"
                },
                "gender": {
                    "description": "Gender is the gender of the user.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier of the user.\nIt is automatically generated when the user is created.",
                    "type": "string"
                },
                "last_name": {
                    "description": "LastName is the last name of the user.",
                    "type": "string"
                },
                "middle_name": {
                    "description": "MiddleName is the middle name of the user.",
                    "type": "string"
                },
                "otp": {
                    "description": "OTP is the one time password of the user.",
                    "type": "string"
                },
                "password": {
                    "description": "Password is the password of the user.\nIt is only used for logging in with email",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone is the phone of the user.",
                    "type": "string"
                },
                "profile_picture": {
                    "description": "ProfilePicture is the profile picture of the user.\nIt is set on a separate setProfilePicture endpoint.",
                    "type": "string"
                },
                "status": {
                    "description": "Status is the status of the user.\nIt is set to active by default after successful registration.",
                    "type": "string"
                },
                "user_name": {
                    "description": "UserName is the username of the user.\nIt is currently of no use",
                    "type": "string"
                }
            }
        },
        "dto.TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "AccessToken is the access token for the current login",
                    "type": "string"
                },
                "id_token": {
                    "description": "IDToken is the OpenID specific JWT token",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "RefreshToken is the refresh token for the access token",
                    "type": "string"
                },
                "token_type": {
                    "description": "TokenType is the type of token",
                    "type": "string"
                }
            }
        },
        "dto.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt is the time when the user is created.\nIt is automatically set when the user is created.",
                    "type": "string"
                },
                "email": {
                    "description": "Email is the email of the user.",
                    "type": "string"
                },
                "first_name": {
                    "description": "FirstName is the first name of the user.",
                    "type": "string"
                },
                "gender": {
                    "description": "Gender is the gender of the user.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier of the user.\nIt is automatically generated when the user is created.",
                    "type": "string"
                },
                "last_name": {
                    "description": "LastName is the last name of the user.",
                    "type": "string"
                },
                "middle_name": {
                    "description": "MiddleName is the middle name of the user.",
                    "type": "string"
                },
                "password": {
                    "description": "Password is the password of the user.\nIt is only used for logging in with email",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone is the phone of the user.",
                    "type": "string"
                },
                "profile_picture": {
                    "description": "ProfilePicture is the profile picture of the user.\nIt is set on a separate setProfilePicture endpoint.",
                    "type": "string"
                },
                "status": {
                    "description": "Status is the status of the user.\nIt is set to active by default after successful registration.",
                    "type": "string"
                },
                "user_name": {
                    "description": "UserName is the username of the user.\nIt is currently of no use",
                    "type": "string"
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code is the error code. It is not status code",
                    "type": "integer"
                },
                "description": {
                    "description": "Description is the error description.",
                    "type": "string"
                },
                "field_error": {
                    "description": "FieldError is the error detail for each field, if available that is.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FieldError"
                    }
                },
                "message": {
                    "description": "Message is the error message.",
                    "type": "string"
                },
                "stack_trace": {
                    "description": "StackTrace is the stack trace of the error.\nIt is only returned for debugging",
                    "type": "string"
                }
            }
        },
        "model.FieldError": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description is the error description for this field.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the field that caused the error.",
                    "type": "string"
                }
            }
        }
    }
}