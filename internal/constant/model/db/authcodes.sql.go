// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: authcodes.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createAuthCode = `-- name: CreateAuthCode :one
INSERT INTO authcodes (
    code,
    user_id,
    status,
    scope,
    redirect_uri,
    client_id
) VALUES (
    $1, $2, $3, $4, $5, $6
)
RETURNING id, code, user_id, status, scope, redirect_uri, client_id, created_at
`

type CreateAuthCodeParams struct {
	Code        string    `json:"code"`
	UserID      uuid.UUID `json:"user_id"`
	Status      string    `json:"status"`
	Scope       string    `json:"scope"`
	RedirectUri string    `json:"redirect_uri"`
	ClientID    uuid.UUID `json:"client_id"`
}

func (q *Queries) CreateAuthCode(ctx context.Context, arg CreateAuthCodeParams) (Authcode, error) {
	row := q.db.QueryRow(ctx, createAuthCode,
		arg.Code,
		arg.UserID,
		arg.Status,
		arg.Scope,
		arg.RedirectUri,
		arg.ClientID,
	)
	var i Authcode
	err := row.Scan(
		&i.ID,
		&i.Code,
		&i.UserID,
		&i.Status,
		&i.Scope,
		&i.RedirectUri,
		&i.ClientID,
		&i.CreatedAt,
	)
	return i, err
}

const deleteAuthCode = `-- name: DeleteAuthCode :one
DELETE FROM authcodes WHERE code = $1 RETURNING id, code, user_id, status, scope, redirect_uri, client_id, created_at
`

func (q *Queries) DeleteAuthCode(ctx context.Context, code string) (Authcode, error) {
	row := q.db.QueryRow(ctx, deleteAuthCode, code)
	var i Authcode
	err := row.Scan(
		&i.ID,
		&i.Code,
		&i.UserID,
		&i.Status,
		&i.Scope,
		&i.RedirectUri,
		&i.ClientID,
		&i.CreatedAt,
	)
	return i, err
}

const getAuthCode = `-- name: GetAuthCode :one
SELECT id, code, user_id, status, scope, redirect_uri, client_id, created_at FROM authcodes WHERE code = $1
`

func (q *Queries) GetAuthCode(ctx context.Context, code string) (Authcode, error) {
	row := q.db.QueryRow(ctx, getAuthCode, code)
	var i Authcode
	err := row.Scan(
		&i.ID,
		&i.Code,
		&i.UserID,
		&i.Status,
		&i.Scope,
		&i.RedirectUri,
		&i.ClientID,
		&i.CreatedAt,
	)
	return i, err
}
